@model List<Carpool>
@using Newtonsoft.Json;
@if (!string.IsNullOrEmpty((string)TempData["Message"]))
{
                <div class="alert alert-success">@TempData["Message"]</div>
}
<a class="btn" style="border: 2px solid grey" asp-controller="Carpool" asp-action="OfferAEmptyCarpool">Add an offer</a>
<a class="btn" style="border: 2px solid grey" asp-controller="Request" asp-action="SeeAllRequests">See all request(s)</a>
<a class="btn" style="border: 2px solid grey" asp-controller="Request" asp-action="MakeARequest">Make a request</a>
<a class="btn" style="border: 2px solid grey" asp-controller="Registration" asp-action="ConsultRegistrations">Consult Registration(s)</a>
<a class="btn" style="border: 2px solid grey" asp-controller="Carpool" asp-action="ConsultMyOffers">Consult my offer(s)</a>
<a class="btn" style="border: 2px solid grey" asp-controller="User" asp-action="AddVehicle">Add vehicle</a>
<br/>
@("Welcome : " + ViewData["User"] + " this is the available carpools")
<br/>
<table class="table">
    <tr>
        <th>id</th>
        <th>Departure</th>
        <th>Arrival</th>
        <th>Date</th>
        <th>Smoke</th>
        <th>Pause</th>
        <th>Place remaining</th>
    </tr>
    @foreach(Carpool c in Model)
    {
        string carpoolJson = JsonConvert.SerializeObject(c, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });
        <tr>
            <td>@c.Id</td>
            <td>@c.Departure</td>
            <td>@c.Arrival</td>
            <td>@c.Date</td>
            <td>@c.Smoke</td>
            <td>@c.Pause</td>
            <td>@c.CalculateNbrPlaceRemaining()</td>
            <td><a asp-controller="Review" asp-action="ConsultReview" asp-route-JsonCarpool="@carpoolJson">Consult review</a></td>
            <td><a asp-controller="Registration" asp-action="RegisterForACarpool" asp-route-JsonCarpool="@carpoolJson">Register</a></td>
        </tr>
    }
</table>